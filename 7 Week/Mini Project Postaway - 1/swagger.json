{
  "swagger": "2.0",
  "info": {
    "version": "1.0.1",
    "description": "API for PostAway social networking application",
    "title": "PostAway API"
  },
  "host": "localhost:3000",
  "securityDefinitions": {
    "JWT": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "description": "Enter your JWT token in the format **Bearer &lt;token&gt;**"
    }
  },
  "paths": {
    "/api/sign-in": {
      "post": {
        "tags": ["Users"],
        "summary": "Login to PostAway application",
        "description": "Login to PostAway application",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Incorrect username or password"
          }
        }
      }
    },
    "/api/sign-up": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "description": "Register a new user with name, email, and password.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Registration Data",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "409": {
            "description": "User with the provided email already exists"
          }
        }
      }
    },

    "/api/posts/all": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get all the posts",
        "description": "Retrieve all the posts from the PostAway application.",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "List of all posts"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/posts/": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create a new post",
        "description": "Create a new post with a caption and an optional image.",
        "security": [{ "JWT": {} }],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "caption",
            "description": "Caption for the post",
            "type": "string",
            "example": "This is a caption!",
            "required": true
          },
          {
            "in": "formData",
            "name": "imageUrl",
            "description": "Image to be uploaded",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get a post by ID",
        "description": "Retrieve a specific post by its ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "tags": ["Posts"],
        "summary": "Update a post by ID",
        "description": "Update a specific post by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Post Caption",
            "schema": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string",
                  "example": "Updated caption"
                }
              },
              "required": ["caption"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Posts"],
        "summary": "Delete a post by ID",
        "description": "Delete a specific post by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/posts/toggle-like/{postId}": {
      "get": {
        "tags": ["Likes"],
        "summary": "Toggle like for a post",
        "description": "Like or unlike a post.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Post liked or unliked successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/posts/is-liked/{postId}": {
      "get": {
        "tags": ["Likes"],
        "summary": "Check if post is liked",
        "description": "Check if the post is liked by the current user.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Whether the post is liked by the current user"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/posts/likes/{postId}": {
      "get": {
        "tags": ["Likes"],
        "summary": "Get all likes for a post",
        "description": "Retrieve all likes for a specific post.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all likes for the post"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/posts/user-likes/": {
      "get": {
        "tags": ["Likes"],
        "summary": "Get all likes of the current user",
        "description": "Retrieve all posts liked by the current user.",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "List of all likes of the current user"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/comments/{postId}": {
      "get": {
        "tags": ["Comments"],
        "summary": "Retrieve all comments for a specific post",
        "description": "Get all comments for a specific post by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments for the post"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Comments"],
        "summary": "Add a new comment to a specific post",
        "description": "Add a new comment to a specific post by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "ID of the post",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment content",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "example": "This is a comment!"
                }
              },
              "required": ["content"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment added successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/comments/{commentId}": {
      "put": {
        "tags": ["Comments"],
        "summary": "Update a specific comment by ID",
        "description": "Update a specific comment by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "ID of the comment",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated comment content",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "example": "Updated comment content!"
                }
              },
              "required": ["content"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment updated successfully"
          },
          "404": {
            "description": "Comment not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete a specific comment by ID",
        "description": "Delete a specific comment by its ID.",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "description": "ID of the comment",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully"
          },
          "404": {
            "description": "Comment not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
